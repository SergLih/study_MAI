//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:2.0.50727.9151
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------


// 
// Этот исходный код был создан с помощью wsdl, версия=2.0.50727.3038.
// 
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name = "serv_wsdl.phpBinding", Namespace = "urn:serv_wsdl")]
public partial class serv_wsdlphp : System.Web.Services.Protocols.SoapHttpClientProtocol
{

    private System.Threading.SendOrPostCallback prog4OperationCompleted;

    /// <remarks/>
    public serv_wsdlphp()
    {
        this.Url = "http://www.chernyshov.com/WS-3/index.php";
    }

    /// <remarks/>
    public event prog4CompletedEventHandler prog4Completed;

    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:s4_wsdl#prog4", RequestNamespace = "urn:s4_wsdl", ResponseNamespace = "urn:s4_wsdl")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string prog4(string x)
    {
        object[] results = this.Invoke("prog4", new object[] {
                    x});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginprog4(string x, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("prog4", new object[] {
                    x}, callback, asyncState);
    }

    /// <remarks/>
    public string Endprog4(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void prog4Async(string x)
    {
        this.prog4Async(x, null);
    }

    /// <remarks/>
    public void prog4Async(string x, object userState)
    {
        if ((this.prog4OperationCompleted == null))
        {
            this.prog4OperationCompleted = new System.Threading.SendOrPostCallback(this.Onprog4OperationCompleted);
        }
        this.InvokeAsync("prog4", new object[] {
                    x}, this.prog4OperationCompleted, userState);
    }

    private void Onprog4OperationCompleted(object arg)
    {
        if ((this.prog4Completed != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.prog4Completed(this, new prog4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void prog4CompletedEventHandler(object sender, prog4CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class prog4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal prog4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
