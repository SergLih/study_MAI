(define (half-interval-metod a b)
  (let((a-value (fun a))
       (b-value (fun b))
      )
     (cond((not(not(or(<= a-value 0)(<= 0 b-value))))
                 (try a b))
         ((not(not(or(<= 0 a-value)(<= b-value 0))))
                 (try b a))
         ((or(not(or(<= 0 a-value)(<= 0 b-value)))
             (not(or(<= a-value 0)(<= b-value 0))))
                 (+ b 1))
     )
  )
)